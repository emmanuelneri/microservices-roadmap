// Microservices Roadmap
digraph {
	microservices [label=Microservices]
	microservices -> application
	microservices -> infrastructure
	microservices -> observability
	microservices -> process
	microservices -> test
	application [label=Application]
	application -> stack
	application -> db
	application -> "data-management"
	application -> monitoring
	application -> comunication
	application -> consistency
	stack [label=Stack]
	linguagens [label=Linguagens]
	framework [label=Frameworks]
	lib [label=Libs]
	stack -> linguagens
	linguagens -> framework
	linguagens -> lib
	db [label=Database]
	db -> relational
	db -> nosql
	nosql [label=NoSQL]
	"key-value" [label="Key-Value"]
	columnar [label=Columnar]
	document [label=Document]
	"graph" [label="Graph"]
	nosql -> "key-value"
	nosql -> columnar
	nosql -> document
	nosql -> "graph"
	relational [label=Relational]
	sql [label=SQL]
	acid [label=ACID]
	relational -> sql
	relational -> acid
	"data-management" [label="Data Management"]
	cqrs [label=CQRS]
	"event-sourcing" [label="Event Sourcing"]
	"data-management" -> cqrs
	"data-management" -> "event-sourcing"
	monitoring [label=Monitoring]
	"health-check" [label="Health Check"]
	"app-metrics" [label=Metrics]
	monitoring -> "health-check"
	monitoring -> "app-metrics"
	comunication [label=Comunication]
	synchronous [label=Synchronous]
	asynchronous [label=Asynchronous]
	comunication -> synchronous
	comunication -> asynchronous
	grpc [label=gRPC]
	http [label=HTTP]
	synchronous -> http
	synchronous -> grpc
	rest [label=Rest]
	graphql [label=GraphQL]
	http -> rest
	http -> graphql
	versioning [label=Versioning]
	"open-api" [label=OpenAPI]
	rest -> versioning
	rest -> "open-api"
	queue [label=Queue]
	"pub-sub" [label="Publish-Subscribe"]
	asynchronous -> queue
	asynchronous -> "pub-sub"
	asynchronous -> messages
	"queue-transaction" [label="Message Transaction"]
	"worker-queue" [label="Worker Queue"]
	"command-queue" [label="Command Queue"]
	queue -> "queue-transaction"
	queue -> "worker-queue"
	queue -> "command-queue"
	"at-most-once-delivery" [label="At Most Once Delivery"]
	"at-least-once-delivery" [label="At Least Once Delivery"]
	"exactly-once-delivery" [label="Exactly Once Delivery"]
	"pub-sub" -> "at-most-once-delivery"
	"pub-sub" -> "at-least-once-delivery"
	"pub-sub" -> "exactly-once-delivery"
	deduplicate [label="Deduplicate-message"]
	idempotent [label="Idempotent Consumer"]
	"at-most-once-delivery" -> idempotent
	"at-least-once-delivery" -> idempotent
	"exactly-once-delivery" -> deduplicate
	messages [label=Message]
	"tolerant-reader" [label="tolerant-reader"]
	schema [label=Schema]
	"message-format" [label=Format]
	messages -> "tolerant-reader"
	messages -> schema
	messages -> "message-format"
	application -> "fault-tolerance"
	"fault-tolerance" [label="Fault Tolerance"]
	dlq [label="Dead Letter Queues"]
	retry [label=Retry]
	"app-circuit-breaker" [label="Circuit Breaker"]
	fallback [label=Fallback]
	consistency [label=Consistency]
	"eventual-consistency" [label="eventual consistency"]
	saga [label=SAGA]
	consistency -> "eventual-consistency"
	consistency -> saga
	"fault-tolerance" -> dlq
	"fault-tolerance" -> retry
	"fault-tolerance" -> "app-circuit-breaker"
	"fault-tolerance" -> fallback
	"app-circuit-breaker" -> fallback
	infrastructure [label=Infrastructure]
	"application-environment" [label="Application Environment"]
	gateway [label=Gateway]
	"load-balance" [label="Load Balance"]
	"service-discovery" [label="Service Discovery"]
	configuration [label=Configurations]
	infrastructure -> "application-environment"
	infrastructure -> gateway
	infrastructure -> "load-balance"
	infrastructure -> "service-discovery"
	infrastructure -> configuration
	gateway -> "load-balance"
	"load-balance" -> "service-discovery"
	container [label=container]
	"application-environment" -> scaling
	"cloud-instance" [label="Cloud Instance"]
	"on-premise" [label=OnPremise]
	serveless [label=Serverless]
	"application-environment" -> container
	"application-environment" -> "cloud-instance"
	"application-environment" -> "on-premise"
	"application-environment" -> serveless
	container -> orchestration
	scaling -> "auto-scaling"
	orchestration -> scaling
	environment [label=Environments]
	secrets [label=Secrets]
	configuration -> environment
	configuration -> secrets
	observability [label=Observability]
	observability -> log
	observability -> metrics
	observability -> tracing
	log [label=Logs]
	metrics [label=Metrics]
	tracing [label=Tracing]
	process [label=Process]
	process -> "continuous-integration"
	process -> "continuous-delivery"
	process -> deploy
	deploy [label=deploy]
	"blue-green-deployment" [label="Blue/Green Deployment"]
	"canary-release" [label="Canary release"]
	deploy -> "blue-green-deployment"
	deploy -> "canary-release"
	test [label=Test]
	test -> "component-test"
	test -> "contract-test"
	test -> "end-to-end-test"
	"component-test" [label="Component Test"]
	"contract-test" [label="Contract Test"]
	"end-to-end-test" [label="end-to-end Test"]
}
