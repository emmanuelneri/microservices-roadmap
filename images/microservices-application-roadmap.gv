// Microservices Application Roadmap
digraph {
	application [label=Application]
	application -> stack
	application -> db
	application -> "data-management"
	application -> monitoring
	application -> comunication
	application -> consistency
	stack [label=Stack]
	linguagens [label=Linguagens]
	framework [label=Frameworks]
	lib [label=Libs]
	stack -> linguagens
	stack -> framework
	stack -> lib
	db [label=Database]
	sql [label=SQL]
	nosql [label=NoSQL]
	cache [label=Cache]
	db -> sql
	db -> nosql
	db -> cache
	"data-management" [label=Datamanagement]
	cqrs [label=CQRS]
	"event-sourcing" [label="Event Sourcing"]
	"data-management" -> cqrs
	"data-management" -> "event-sourcing"
	monitoring [label=Monitoring]
	"health-check" [label="Health Check"]
	"app-metrics" [label=Metrics]
	monitoring -> "health-check"
	monitoring -> "app-metrics"
	comunication [label=Comunication]
	synchronous [label=Synchronous]
	asynchronous [label=Asynchronous]
	comunication -> synchronous
	comunication -> asynchronous
	grpc [label=gRPC]
	http [label=HTTP]
	synchronous -> http
	synchronous -> grpc
	rest [label=Rest]
	graphql [label=GraphQL]
	http -> rest
	http -> graphql
	queue [label=Queue]
	"pub-sub" [label="Publish-Subscribe"]
	asynchronous -> queue
	asynchronous -> "pub-sub"
	"queue-transaction" [label="Message Transaction"]
	queue -> "queue-transaction"
	idempotent [label="Idempotent Consumer"]
	deduplicate [label="Deduplicate-message"]
	"tolerant-reader" [label="tolerant-reader"]
	"pub-sub" -> idempotent
	"pub-sub" -> deduplicate
	"pub-sub" -> "tolerant-reader"
	application -> "fault-tolerance"
	"fault-tolerance" [label="Fault Tolerance"]
	"app-circuit-breaker" [label="Circuit Breaker"]
	dlq [label="Dead Letter Queues"]
	retry [label=Retry]
	consistency [label=Consistency]
	"eventual-consistency" [label="eventual consistency"]
	saga [label=SAGA]
	consistency -> "eventual-consistency"
	consistency -> saga
	"fault-tolerance" -> "app-circuit-breaker"
	"fault-tolerance" -> dlq
	"fault-tolerance" -> retry
}
